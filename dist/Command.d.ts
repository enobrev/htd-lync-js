export declare const Header = 2;
export declare const IsVolume: {
    No: number;
    Yes: number;
};
export type IsVolume = (typeof IsVolume)[keyof typeof IsVolume];
export declare const Zone: {
    None: number;
    _01: number;
    _02: number;
    _03: number;
    _04: number;
    _05: number;
    _06: number;
    _07: number;
    _08: number;
    _09: number;
    _10: number;
    _11: number;
    _12: number;
};
export type Zone = (typeof Zone)[keyof typeof Zone];
export declare const Mode: {
    Repeat: number;
    Control: number;
    Info_Zones: number;
    Id: number;
    Status_Everything: number;
    Zone_Name: number;
    Zone_Input_Name: number;
    Firmware: number;
    Status_Zones: number;
    Volume: number;
    Balance: number;
    Treble: number;
    Bass: number;
    Echo: number;
};
export type Mode = (typeof Mode)[keyof typeof Mode];
export declare const Func: {
    Off: number;
    Shuffle: number;
    MP3_FF: number;
    MP3_Play: number;
    MP3_Back: number;
    MP3_Stop: number;
    Mute_On: number;
    Mute_Off: number;
    All_Power_On: number;
    All_Power_Off: number;
    Zone_Power_On: number;
    Zone_Power_Off: number;
    DND_On: number;
    DND_Off: number;
    On: number;
};
export type Func = (typeof Func)[keyof typeof Func];
export declare const Input: {
    _01: number;
    _02: number;
    _03: number;
    _04: number;
    _05: number;
    _06: number;
    _07: number;
    _08: number;
    _09: number;
    _10: number;
    _11: number;
    _12: number;
    _13: number;
    _14: number;
    _15: number;
    _16: number;
    _17: number;
    _18: number;
};
export type Input = (typeof Input)[keyof typeof Input];
export declare const PartyInput: {
    _01: number;
    _02: number;
    _03: number;
    _04: number;
    _05: number;
    _06: number;
    _07: number;
    _08: number;
    _09: number;
    _10: number;
    _11: number;
    _12: number;
    _13: number;
    _14: number;
    _15: number;
    _16: number;
    _17: number;
    _18: number;
};
export type PartyInput = (typeof PartyInput)[keyof typeof PartyInput];
export declare const MP3_Action: {
    readonly Null: 0;
    readonly Back: 1;
    readonly Play: 2;
    readonly FF: 3;
    readonly Stop: 4;
    readonly Repeat_On: 5;
    readonly Repeat_Off: 6;
    readonly Shuffle: 7;
};
export type MP3_Action = (typeof MP3_Action)[keyof typeof MP3_Action];
type CommandProps = {
    zone?: Zone;
    mode?: Mode;
    func?: Func;
};
export default class Command {
    is_volume: IsVolume;
    zone: Zone;
    mode: Mode;
    func: Func | Input | PartyInput | number;
    constructor({ zone, mode, func }: CommandProps);
    get_command(): Buffer;
    static add_checksum(command: Buffer): Buffer;
    static calculate_checksum(command: Buffer): number;
    static validate_checksum(data: Buffer): boolean;
    static set_echo_mode(on: boolean): Command;
    static get_id(): Command;
    static get_firmware(): Command;
    static get_status_everything(): Command;
    static get_status_all_zones(): Command;
    static get_info_all_zones(): Command;
    static set_party_mode(func: PartyInput): Command;
    static get_zone_name(zone: Zone): Command;
    static get_zone_input_name(zone: Zone, func: Input): Command;
    static set_power(on: boolean): Command;
    static set_zone_power(zone: Zone, on: boolean): Command;
    static set_volume(zone: Zone, _volume: number): Command;
    static set_mute(zone: Zone, on: boolean): Command;
    static set_input(zone: Zone, func: Input): Command;
    static set_dnd(zone: Zone, on: boolean): Command;
    static set_balance(zone: Zone, _balance: number): Command;
    static set_treble(zone: Zone, _treble: number): Command;
    static set_bass(zone: Zone, _bass: number): Command;
    static mp3_action(action: MP3_Action): Command;
}
export {};
//# sourceMappingURL=Command.d.ts.map